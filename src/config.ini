; == GRID ==
; N             uint16     Grid size (N^dim)
; dim           [2; 3]      Grid dimension, can be either 2 or 3

[GRID]
N = 64
dim = 3

; == SOLVER ==
; solver        [CG; PCG]   PDE solver to use
;               - CG    : Conjugate Gradient Method
;               - PCG   : Modified Incomplete Cholesky Level Zero Preconditioned Conjugate Gradient Method
; advection     [SEMI_LAGRANGIAN; MACCORMACK]   Advection scheme to use
;               - SEMI_LAGRANGIAN   : Semi Lagrangian advection scheme
;               - MACCORMACK        : MacCormack advection scheme, more precise

[SOLVER]
solver = PCG
advection = MACCORMACK

; == FLUID ==
; dt            double      Simulation step time

[FLUID]
dt = 0.0000025

; == RENDER ==
; exportFrames  boolean     If true than each simulation frames are rendered into a .png file
;                               (always true with 2D simulation)
; renderFrames  boolean     If true than the simulation is shown in real-time in a window
; width         uint16      Render window AND frames width
; height        uint16      Render window AND frames height
; endFrame      uint64      Number of iterations before ending the simulation

[RENDER]
exportFrames = true
renderFrames = true
width = 800
height = 800
endFrame = 2048
